name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      EC2_HOST: ec2-15-164-166-140.ap-northeast-2.compute.amazonaws.com
      EC2_USER: ubuntu
      PROJECT_DIR: smartfarming-ai

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" | tr -d '\r' > smartfarming-live.pem
          chmod 400 smartfarming-live.pem

      - name: Deploy to EC2 via SSH
        run: |
          # SSH 연결 테스트
          echo "Testing SSH connection..."
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=30 \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
              "echo 'SSH connection successful'"
          
          # 실제 배포
          echo "Starting deployment..."
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=30 \
              -o ServerAliveInterval=60 \
              -o ServerAliveCountMax=3 \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
              "cd ${{ env.PROJECT_DIR }} && \
               echo '1. Pulling latest code...' && \
               git pull origin main && \
               echo '2. Creating .env file...' && \
               cat > .env << 'EOF'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_DATABASE_URL=${{ secrets.NEXT_PUBLIC_DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
          NEXT_PUBLIC_REPLICATE_API_TOKEN=${{ secrets.NEXT_PUBLIC_REPLICATE_API_TOKEN }}
          NEXT_PUBLIC_PAYPAL_CLIENT_ID=${{ secrets.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}
          EOF
               echo '3. Installing dependencies...' && \
               yarn install && \
               echo '4. Building application...' && \
               source .env && \
               NODE_OPTIONS='--max-old-space-size=2048' yarn build && \
               echo '5. Restarting PM2...' && \
               pm2 restart all && \
               echo '6. Checking status...' && \
               pm2 status && \
               echo 'Deployment completed successfully!'"