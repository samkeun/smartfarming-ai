name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch: # 수동 실행 가능

# 워크플로우 전체에서 사용할 환경 변수
env:
  NODE_VERSION: '22'
  AWS_REGION: 'ap-northeast-2'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    # Job 레벨 환경 변수
    env:
      EC2_HOST: ec2-15-164-166-140.ap-northeast-2.compute.amazonaws.com
      EC2_USER: ubuntu
      PROJECT_DIR: smartfarming-ai

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" | tr -d '\r' > smartfarming-live.pem
          chmod 400 smartfarming-live.pem

      # 방법 1: EC2에 .env 파일 생성
      - name: Create .env file on EC2
        run: |
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=30 \
              -o ServerAliveInterval=60 \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
              "cd ${{ env.PROJECT_DIR }} && \
               cat > .env << 'EOF'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_DATABASE_URL=${{ secrets.NEXT_PUBLIC_DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
          NEXT_PUBLIC_REPLICATE_API_TOKEN=${{ secrets.NEXT_PUBLIC_REPLICATE_API_TOKEN }}
          NEXT_PUBLIC_PAYPAL_CLIENT_ID=${{ secrets.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}
          NODE_ENV=production
          PORT=3000
          EOF"

      # # 방법 2: 환경 변수를 직접 export하여 실행
      # - name: Deploy with environment variables
      #   env:
      #     # Step 레벨 환경 변수
      #     BUILD_COMMAND: "yarn build"
      #     START_COMMAND: "pm2 restart all"
      #   run: |
      #     ssh -i smartfarming-live.pem \
      #         -o StrictHostKeyChecking=no \
      #         ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
      #         "cd ${{ env.PROJECT_DIR }} && \
      #          git pull origin main && \
      #          yarn install && \
      #          export DATABASE_URL='${{ secrets.DATABASE_URL }}' && \
      #          export NEXT_PUBLIC_DATABASE_URL='${{ secrets.NEXT_PUBLIC_DATABASE_URL }}' && \
      #          export NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY='${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}' && \
      #          export CLERK_SECRET_KEY='${{ secrets.CLERK_SECRET_KEY }}' && \
      #          export NEXT_PUBLIC_CLERK_SIGN_IN_URL='${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}' && \
      #          export NEXT_PUBLIC_CLERK_SIGN_UP_URL='${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}' && \
      #          export NEXT_PUBLIC_REPLICATE_API_TOKEN='${{ secrets.NEXT_PUBLIC_REPLICATE_API_TOKEN }}' && \
      #          export NEXT_PUBLIC_PAYPAL_CLIENT_ID='${{ secrets.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}' && \
      #          export NODE_OPTIONS='--max-old-space-size=2048' && \
      #          ${{ env.BUILD_COMMAND }} && \
      #          ${{ env.START_COMMAND }}"

      # 상태 확인
      - name: Check deployment status
        if: always() # 항상 실행
        run: |
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
              "cd ${{ env.PROJECT_DIR }} && \
               pm2 status && \
               echo '=== Recent PM2 Logs ===' && \
               pm2 logs --lines 10 --nostream"