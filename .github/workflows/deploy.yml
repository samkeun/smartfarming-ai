name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    
    env:
      EC2_HOST: ec2-15-164-166-140.ap-northeast-2.compute.amazonaws.com
      EC2_USER: ubuntu
      PROJECT_DIR: smartfarming-ai
      APP_NAME: smartfarming-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" | tr -d '\r' > smartfarming-live.pem
          chmod 400 smartfarming-live.pem

      - name: Test SSH connection first
        continue-on-error: true
        run: |
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=10 \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} \
              "echo 'SSH connection test successful'"

      - name: Deploy to EC2
        run: |
          ssh -i smartfarming-live.pem \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=30 \
              -o ServerAliveInterval=30 \
              -o ServerAliveCountMax=120 \
              -o TCPKeepAlive=yes \
              ${{ env.EC2_USER }}@${{ env.EC2_HOST }} 'bash -s' << 'ENDSSH'
          set -e
          cd ${{ env.PROJECT_DIR }}
          
          echo "Starting deployment at $(date)"
          
          # Git pull
          echo "Pulling latest changes..."
          git pull origin main
          
          # Create .env file
          echo "Creating .env file..."
          cat > .env << 'EOF'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_DATABASE_URL=${{ secrets.NEXT_PUBLIC_DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
          NEXT_PUBLIC_REPLICATE_API_TOKEN=${{ secrets.NEXT_PUBLIC_REPLICATE_API_TOKEN }}
          NEXT_PUBLIC_PAYPAL_CLIENT_ID=${{ secrets.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}
          EOF
          
          echo '.env file created successfully'
          
          # Install dependencies
          echo "Installing dependencies..."
          yarn install
          
          # Build with nohup to prevent timeout
          echo "Starting build process..."
          source .env
          
          # Build in background with proper output
          nohup sh -c 'NODE_OPTIONS="--max-old-space-size=2048" yarn build 2>&1 | tee build.log' &
          BUILD_PID=$!
          
          # Monitor build process
          echo "Build started with PID: $BUILD_PID"
          
          # Keep SSH alive while waiting for build
          while kill -0 $BUILD_PID 2>/dev/null; do
              echo "Build in progress... $(date)"
              sleep 10
          done
          
          # Check if build succeeded
          wait $BUILD_PID
          BUILD_EXIT_CODE=$?
          
          if [ $BUILD_EXIT_CODE -eq 0 ]; then
              echo "Build completed successfully!"
              
              # PM2 처리
              echo "Managing PM2 process..."
              pm2 delete ${{ env.APP_NAME }} 2>/dev/null || true
              pm2 start yarn --name ${{ env.APP_NAME }} -- start
              pm2 save --force
              pm2 list
              
              echo "Deployment completed successfully at $(date)"
          else
              echo "Build failed with exit code: $BUILD_EXIT_CODE"
              echo "Last 50 lines of build log:"
              tail -50 build.log
              exit $BUILD_EXIT_CODE
          fi
          ENDSSH